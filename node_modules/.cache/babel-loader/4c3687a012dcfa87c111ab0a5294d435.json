{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eking\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\blogProject\\\\ms_blog\\\\mainProject\\\\F4\\\\src\\\\shared\\\\components\\\\VertOptions.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useCallback, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Popover, IconButton, MenuList, ListItemText, ListItemIcon, MenuItem, withStyles } from \"@material-ui/core\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  listItemtext: {\n    paddingLeft: \"0 !important\"\n  }\n};\n\nfunction VertOptions(props) {\n  _s();\n\n  const {\n    items,\n    classes,\n    color\n  } = props;\n  const anchorEl = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleClose = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n  const handleOpen = useCallback(() => {\n    setIsOpen(true);\n  }, [setIsOpen]);\n  const id = isOpen ? \"scroll-playground\" : null;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleOpen,\n      buttonRef: anchorEl,\n      style: {\n        color: color ? color : null\n      },\n      \"aria-describedby\": id,\n      \"aria-label\": \"More Options\",\n      children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {\n        style: {\n          color: color ? color : null\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      id: id,\n      open: isOpen,\n      anchorEl: anchorEl.current,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      onClose: handleClose,\n      disableScrollLock: true,\n      children: /*#__PURE__*/_jsxDEV(MenuList, {\n        dense: true,\n        children: items.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => {\n            handleClose();\n            item.onClick();\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: item.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            className: classes.listItemtext,\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, item.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VertOptions, \"Xr09f3HVavkYTvF/RQK6WRZ6Uiw=\");\n\n_c = VertOptions;\nVertOptions.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n  classes: PropTypes.object.isRequired,\n  color: PropTypes.string\n};\nexport default withStyles(styles)(VertOptions);\n\nvar _c;\n\n$RefreshReg$(_c, \"VertOptions\");","map":{"version":3,"sources":["C:/Users/eking/OneDrive/Masaüstü/blogProject/ms_blog/mainProject/F4/src/shared/components/VertOptions.js"],"names":["React","Fragment","useState","useCallback","useRef","PropTypes","Popover","IconButton","MenuList","ListItemText","ListItemIcon","MenuItem","withStyles","MoreVertIcon","styles","listItemtext","paddingLeft","VertOptions","props","items","classes","color","anchorEl","isOpen","setIsOpen","handleClose","handleOpen","id","current","vertical","horizontal","map","item","onClick","icon","name","propTypes","arrayOf","object","isRequired","string"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,WAApC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,OADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,YAJF,EAKEC,YALF,EAMEC,QANF,EAOEC,UAPF,QAQO,mBARP;AASA,OAAOC,YAAP,MAAyB,6BAAzB;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE;AADD;AADD,CAAf;;AAMA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA4BH,KAAlC;AACA,QAAMI,QAAQ,GAAGlB,MAAM,EAAvB;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMuB,WAAW,GAAGtB,WAAW,CAAC,MAAM;AACpCqB,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAF8B,EAE5B,CAACA,SAAD,CAF4B,CAA/B;AAIA,QAAME,UAAU,GAAGvB,WAAW,CAAC,MAAM;AACnCqB,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAF6B,EAE3B,CAACA,SAAD,CAF2B,CAA9B;AAIA,QAAMG,EAAE,GAAGJ,MAAM,GAAG,mBAAH,GAAyB,IAA1C;AACA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,OAAO,EAAEG,UADX;AAEE,MAAA,SAAS,EAAEJ,QAFb;AAGE,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAEA,KAAK,GAAGA,KAAH,GAAW;AAAzB,OAHT;AAIE,0BAAkBM,EAJpB;AAKE,oBAAW,cALb;AAAA,6BAOE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEN,UAAAA,KAAK,EAAEA,KAAK,GAAGA,KAAH,GAAW;AAAzB;AAArB;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,OAAD;AACE,MAAA,EAAE,EAAEM,EADN;AAEE,MAAA,IAAI,EAAEJ,MAFR;AAGE,MAAA,QAAQ,EAAED,QAAQ,CAACM,OAHrB;AAIE,MAAA,YAAY,EAAE;AACZC,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OAJhB;AAQE,MAAA,eAAe,EAAE;AACfD,QAAAA,QAAQ,EAAE,KADK;AAEfC,QAAAA,UAAU,EAAE;AAFG,OARnB;AAYE,MAAA,OAAO,EAAEL,WAZX;AAaE,MAAA,iBAAiB,MAbnB;AAAA,6BAeE,QAAC,QAAD;AAAU,QAAA,KAAK,MAAf;AAAA,kBACGN,KAAK,CAACY,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAEE,UAAA,OAAO,EAAE,MAAM;AACbP,YAAAA,WAAW;AACXO,YAAAA,IAAI,CAACC,OAAL;AACD,WALH;AAAA,kCAOE,QAAC,YAAD;AAAA,sBAAeD,IAAI,CAACE;AAApB;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE,QAAC,YAAD;AAAc,YAAA,SAAS,EAAEd,OAAO,CAACL,YAAjC;AAAA,sBACGiB,IAAI,CAACG;AADR;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA,WACOH,IAAI,CAACG,IADZ;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AAfF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD;;GA3DQlB,W;;KAAAA,W;AA6DTA,WAAW,CAACmB,SAAZ,GAAwB;AACtBjB,EAAAA,KAAK,EAAEd,SAAS,CAACgC,OAAV,CAAkBhC,SAAS,CAACiC,MAA5B,EAAoCC,UADrB;AAEtBnB,EAAAA,OAAO,EAAEf,SAAS,CAACiC,MAAV,CAAiBC,UAFJ;AAGtBlB,EAAAA,KAAK,EAAEhB,SAAS,CAACmC;AAHK,CAAxB;AAMA,eAAe5B,UAAU,CAACE,MAAD,CAAV,CAAmBG,WAAnB,CAAf","sourcesContent":["import React, { Fragment, useState, useCallback, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Popover,\r\n  IconButton,\r\n  MenuList,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  MenuItem,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nconst styles = {\r\n  listItemtext: {\r\n    paddingLeft: \"0 !important\",\r\n  },\r\n};\r\n\r\nfunction VertOptions(props) {\r\n  const { items, classes, color } = props;\r\n  const anchorEl = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setIsOpen(false);\r\n  }, [setIsOpen]);\r\n\r\n  const handleOpen = useCallback(() => {\r\n    setIsOpen(true);\r\n  }, [setIsOpen]);\r\n\r\n  const id = isOpen ? \"scroll-playground\" : null;\r\n  return (\r\n    <Fragment>\r\n      <IconButton\r\n        onClick={handleOpen}\r\n        buttonRef={anchorEl}\r\n        style={{ color: color ? color : null }}\r\n        aria-describedby={id}\r\n        aria-label=\"More Options\"\r\n      >\r\n        <MoreVertIcon style={{ color: color ? color : null }} />\r\n      </IconButton>\r\n      <Popover\r\n        id={id}\r\n        open={isOpen}\r\n        anchorEl={anchorEl.current}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n        onClose={handleClose}\r\n        disableScrollLock\r\n      >\r\n        <MenuList dense>\r\n          {items.map((item) => (\r\n            <MenuItem\r\n              key={item.name}\r\n              onClick={() => {\r\n                handleClose();\r\n                item.onClick();\r\n              }}\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText className={classes.listItemtext}>\r\n                {item.name}\r\n              </ListItemText>\r\n            </MenuItem>\r\n          ))}\r\n        </MenuList>\r\n      </Popover>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nVertOptions.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(VertOptions);\r\n"]},"metadata":{},"sourceType":"module"}