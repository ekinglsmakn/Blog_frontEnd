{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eking\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\blogProject\\\\ms_blog\\\\mainProject\\\\F4\\\\src\\\\logged_out\\\\components\\\\cookies\\\\CookieConsent.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Cookies from \"js-cookie\";\nimport { Snackbar, Button, Typography, Box, withStyles } from \"@material-ui/core\";\nimport fetchIpData from \"./fetchIpData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  snackbarContent: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n});\n\nconst europeanCountryCodes = [\"AT\", \"BE\", \"BG\", \"CY\", \"CZ\", \"DE\", \"DK\", \"EE\", \"ES\", \"FI\", \"FR\", \"GB\", \"GR\", \"HR\", \"HU\", \"IE\", \"IT\", \"LT\", \"LU\", \"LV\", \"MT\", \"NL\", \"PO\", \"PT\", \"RO\", \"SE\", \"SI\", \"SK\"];\n\nfunction CookieConsent(props) {\n  _s();\n\n  const {\n    classes,\n    handleCookieRulesDialogOpen\n  } = props;\n  const [isVisible, setIsVisible] = useState(false);\n  const openOnEuCountry = useCallback(() => {\n    fetchIpData.then(data => {\n      if (data && data.country && !europeanCountryCodes.includes(data.country)) {\n        setIsVisible(false);\n      } else {\n        setIsVisible(true);\n      }\n    }).catch(() => {\n      setIsVisible(true);\n    });\n  }, [setIsVisible]);\n  /**\r\n   * Set a persistent cookie\r\n   */\n\n  const onAccept = useCallback(() => {\n    Cookies.set(\"remember-cookie-snackbar\", \"\", {\n      expires: 365\n    });\n    setIsVisible(false);\n  }, [setIsVisible]);\n  useEffect(() => {\n    if (Cookies.get(\"remember-cookie-snackbar\") === undefined) {\n      openOnEuCountry();\n    }\n  }, [openOnEuCountry]);\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    className: classes.snackbarContent,\n    open: isVisible,\n    message: /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"text-white\",\n      children: [\"We use cookies to ensure you get the best experience on our website.\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this),\n    action: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mr: 1,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleCookieRulesDialogOpen,\n          children: \"More details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: onAccept,\n        children: \"Got it!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CookieConsent, \"KpZVcX2jbD6IENKQErOGruNCinI=\");\n\n_c = CookieConsent;\nCookieConsent.propTypes = {\n  handleCookieRulesDialogOpen: PropTypes.func.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(CookieConsent);\n\nvar _c;\n\n$RefreshReg$(_c, \"CookieConsent\");","map":{"version":3,"sources":["C:/Users/eking/OneDrive/Masaüstü/blogProject/ms_blog/mainProject/F4/src/logged_out/components/cookies/CookieConsent.js"],"names":["React","Fragment","useState","useCallback","useEffect","PropTypes","Cookies","Snackbar","Button","Typography","Box","withStyles","fetchIpData","styles","theme","snackbarContent","borderBottomLeftRadius","borderBottomRightRadius","paddingLeft","spacing","paddingRight","europeanCountryCodes","CookieConsent","props","classes","handleCookieRulesDialogOpen","isVisible","setIsVisible","openOnEuCountry","then","data","country","includes","catch","onAccept","set","expires","get","undefined","propTypes","func","isRequired","withTheme"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useCallback, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  Snackbar,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport fetchIpData from \"./fetchIpData\";\r\n\r\nconst styles = (theme) => ({\r\n  snackbarContent: {\r\n    borderBottomLeftRadius: 0,\r\n    borderBottomRightRadius: 0,\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n  },\r\n});\r\n\r\nconst europeanCountryCodes = [\r\n  \"AT\",\r\n  \"BE\",\r\n  \"BG\",\r\n  \"CY\",\r\n  \"CZ\",\r\n  \"DE\",\r\n  \"DK\",\r\n  \"EE\",\r\n  \"ES\",\r\n  \"FI\",\r\n  \"FR\",\r\n  \"GB\",\r\n  \"GR\",\r\n  \"HR\",\r\n  \"HU\",\r\n  \"IE\",\r\n  \"IT\",\r\n  \"LT\",\r\n  \"LU\",\r\n  \"LV\",\r\n  \"MT\",\r\n  \"NL\",\r\n  \"PO\",\r\n  \"PT\",\r\n  \"RO\",\r\n  \"SE\",\r\n  \"SI\",\r\n  \"SK\",\r\n];\r\n\r\nfunction CookieConsent(props) {\r\n  const { classes, handleCookieRulesDialogOpen } = props;\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const openOnEuCountry = useCallback(() => {\r\n    fetchIpData\r\n      .then((data) => {\r\n        if (\r\n          data &&\r\n          data.country &&\r\n          !europeanCountryCodes.includes(data.country)\r\n        ) {\r\n          setIsVisible(false);\r\n        } else {\r\n          setIsVisible(true);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setIsVisible(true);\r\n      });\r\n  }, [setIsVisible]);\r\n\r\n  /**\r\n   * Set a persistent cookie\r\n   */\r\n  const onAccept = useCallback(() => {\r\n    Cookies.set(\"remember-cookie-snackbar\", \"\", {\r\n      expires: 365,\r\n    });\r\n    setIsVisible(false);\r\n  }, [setIsVisible]);\r\n\r\n  useEffect(() => {\r\n    if (Cookies.get(\"remember-cookie-snackbar\") === undefined) {\r\n      openOnEuCountry();\r\n    }\r\n  }, [openOnEuCountry]);\r\n\r\n  return (\r\n    <Snackbar\r\n      className={classes.snackbarContent}\r\n      open={isVisible}\r\n      message={\r\n        <Typography className=\"text-white\">\r\n          We use cookies to ensure you get the best experience on our website.{\" \"}\r\n        </Typography>\r\n      }\r\n      action={\r\n        <Fragment>\r\n          <Box mr={1}>\r\n            <Button color=\"primary\" onClick={handleCookieRulesDialogOpen}>\r\n              More details\r\n            </Button>\r\n          </Box>\r\n          <Button color=\"primary\" onClick={onAccept}>\r\n            Got it!\r\n          </Button>\r\n        </Fragment>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nCookieConsent.propTypes = {\r\n  handleCookieRulesDialogOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(CookieConsent);\r\n"]},"metadata":{},"sourceType":"module"}